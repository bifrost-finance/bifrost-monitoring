version: '3'

services:
  postgres:
    image: postgres:12-alpine
    command: postgres -c wal_level=logical -c max_replication_slots=1
    ports:
      - 5432:5432
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: postgres

  grafana:
    image: grafana/grafana:8.2.0
    ports:
      - 3000:3000
    depends_on:
      - postgres
    links:
      - postgres
    user: 'root'
    env_file:
      - .env
    volumes:
      - .data/grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/

  prometheus:
    image: prom/prometheus:v2.30.2
    user: 'root'
    volumes:
      - ./prometheus:/etc/prometheus/
      - .data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor

  node-exporter:
    image: prom/node-exporter:v1.2.2
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - 9100:9100

  alertmanager:
    image: prom/alertmanager:v0.22.2
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: mirrorgooglecontainers/cadvisor:v0.33.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080

  postgres-exporter:
    image: bitnami/postgres-exporter:0.10.0
    volumes:
      - ./postgres-exporter:/etc/postgres-exporter
    env_file:
      - .env
    environment:
      - PG_EXPORTER_EXTEND_QUERY_PATH=/etc/postgres-exporter/query.yaml
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    links:
      - postgres
