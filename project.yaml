specVersion: 0.0.1
description: ''
repository: 'https://github.com/bifrost-finance/'
schema: ./schema.graphql
network:
  endpoint: 'wss://bifrost-rpc.testnet.liebi.com'
  # endpoint: 'wss://rpc.polkadot.io'
  types: {
    "TAssetBalance": "Balance",
    "ParachainInherentData": "u128",
    "AmountOf":"i128",
    "Address": "MultiAddress",
    "LookupSource": "MultiAddress",
    "VtokenMintPrice": "Balance",
    "MintPrice": "Balance",
    "SwapFee": "u64",
    "PoolId": "u32",
    "Nonce": "u32",
    "Price": "u64",
    "BiddingOrderId": "u64",
    "EraId": "u32",
    "TokenSymbol": {
      "_enum": [
        "BNC",
        "aUSD",
        "DOT",
        "vDOT",
        "KSM",
        "vKSM",
        "ETH",
        "vETH",
      ]
    },
    "CurrencyId": {
      "_enum": {
        "Token": "TokenSymbol"
      }
    },
    "CurrencyIdOf": "CurrencyId",
    "BlockNumberFor": "BlockNumber",
     "TokenBalance": "Balance",
  "PairId": "u32",
  "AssetId": {
    "_enum": {
      "NativeCurrency": null,
      "ParaCurrency": "u32"
    }
  },
  "Pair": {
    "token_0": "AssetId",
    "token_1": "AssetId",
    "account": "AccountId",
    "total_liquidity": "TokenBalance"
  },
  "PairInfo": {
    "token_0": "AssetId",
    "token_1": "AssetId",
    "account": "AccountId",
    "total_liquidity": "TokenBalance",
    "holding_liquidity": "TokenBalance",
    "reserve_0": "TokenBalance",
    "reserve_1": "TokenBalance"
  }
  }
dataSources:
  - name: main
    kind: substrate/Runtime
    startBlock: 15000
    # startBlock: 3890000
    mapping:
      handlers:
        # - handler: handleBlock
        #   kind: substrate/BlockHandler
        # - handler: handleEvent
        #   kind: substrate/EventHandler
        #   filter:
        #     module: balances
        #     method: Deposit
        # - handler: handleCall
        #   kind: substrate/CallHandler
        # mappingVtokenPool.ts:
        - handler: vtokenPoolBlock
          kind: substrate/BlockHandler
        # mappingAssets.ts:
        # - handler: assetsCreatedEvent
        #   kind: substrate/EventHandler
        #   filter:
        #     module: assets
        #     method: Created
        - handler: assetsTransferredEvent
          kind: substrate/EventHandler
          filter:
            module: currencies
            method: Transferred
        - handler: assetsIssuedEvent
          kind: substrate/EventHandler
          filter:
            module: brmlAssets
            method: Issued
        - handler: assetsBurnedEvent
          kind: substrate/EventHandler
          filter:
            module: brmlAssets
            method: Burned
        - handler: assetsBlock
          kind: substrate/BlockHandler
        - handler: vtokenMintMintedEvent
          kind: substrate/EventHandler
          filter:
            module: vtokenMint
            method: Minted
        - handler: vtokenMintRedeemStartedEvent
          kind: substrate/EventHandler
          filter:
            module: vtokenMint
            method: RedeemStarted
        - handler: aprBlock
          kind: substrate/BlockHandler
        - handler: revenueBlock
          kind: substrate/BlockHandler
        - handler: mktPriceBlock
          kind: substrate/BlockHandler
